/* Generated by MyraPad at 12/2/2024 9:47:10 AM */
using System.Linq;
using System.Collections.Generic;
using System;
using Myra.Graphics2D.UI;

namespace DigitalRise.Editor.UI
{
	public partial class ChooseNodeDialog
	{

		private readonly List<Tuple<string, NodeTypeInfo>> _data = new List<Tuple<string, NodeTypeInfo>>();


		internal NodeTypeInfo NodeTypeInfo => (NodeTypeInfo)_listNodes.SelectedItem.Tag;

		public ChooseNodeDialog()
		{
			BuildUI();

			var data = new List<Tuple<string, NodeTypeInfo>>();
			foreach (var pair in NodesRegistry.NodesByCategories)
			{
				foreach (var typeInfo in pair.Value)
				{
					string first;
					if (typeInfo.SubType == null)
					{
						first = $"{pair.Key}: {typeInfo.Type.Name}";
					}
					else
					{
						first = $"{pair.Key}: {typeInfo.Type.Name} ({typeInfo.SubType.Name})";
					}

					data.Add(new Tuple<string, NodeTypeInfo>(first, typeInfo));
				}
			}

			_data = (from t in data orderby t.Item1 select t).ToList();

			_textFilter.TextChanged += (s, a) => RebuildList();
			_listNodes.SelectedIndexChanged += (s, a) => UpdateEnabled();

			RebuildList();
		}

		private void RebuildList()
		{
			_listNodes.Widgets.Clear();
			foreach (var t in _data)
			{
				if (!string.IsNullOrEmpty(_textFilter.Text) &&
					!t.Item1.Contains(_textFilter.Text, StringComparison.OrdinalIgnoreCase))
				{
					continue;
				}

				var label = new Label
				{
					Text = t.Item1,
					Tag = t.Item2
				};

				_listNodes.Widgets.Add(label);
			}

			UpdateEnabled();
		}

		private void UpdateEnabled()
		{
			ButtonOk.Enabled = _listNodes.SelectedIndex != null;
		}
	}
}